Python templating DSL

*Structure*

from xenu import *
html(
	head(
		title('sample')),
	body(
		h1('sample')))

# =>	<html>
# =>	  <head>
# =>	    <title>
# =>	      sample
# =>	    </title>
# =>	  </head>
# =>	  <body>
# =>	    <h1>
# =>	      sample
# =>	    </h1>
# =>	  </body>
# =>	</html>

*Attributes*

html(body(div({'id': 'sample_id', 'class': 'sample_class'}, 'sample')))

# =>	<html>
# =>	  <body>
# =>	    <div id="sample_id" class="sample_class">
# =>	      sample
# =>	    </div>
# =>	  </body>
# =>	</html>

a('onet', href='http://onet.pl')

# =>	<a href="http://onet.pl">
# =>	  onet
# =>	</a>

a({'href': 'http://onet.pl'}, 'onet') == \
a('onet', href='http://onet.pl') == \
a({'href': 'http://wp.pl'}, 'onet', href='http://onet.pl') # => True

*Loops*

ul(li('python'), li('lisp')) == ul((li('python'), li('lisp'))) == ul([li('python'), li('lisp')]) # => True

languages = ['python', 'lisp', 'erlang', 'haskell']
ul([li(lang) for lang in languages])

# =>	<ul>
# =>	  <li>
# =>	    python
# =>	  </li>
# =>	  <li>
# =>	    lisp
# =>	  </li>
# =>	  <li>
# =>	    erlang
# =>	  </li>
# =>	  <li>
# =>	    haskell
# =>	  </li>
# =>	</ul>

*Namespace conflicts resolving and new tags creation*

from xenu import tag

o = tag('object')
p = tag('param')

o({'id': 'slider'}, p(name='BorderStyle', value='1'))

# =>	<object id="slider">
# =>	  <param name="BorderStyle" value="1"/>
# =>	</object>

*More details*

Check the source. It's really pretty simple and has < 100 lines of code.